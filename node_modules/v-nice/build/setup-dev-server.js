const path = require('path')
const webpack = require('webpack')
const MFS = require('memory-fs')
const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;
const clientConfig = require('./webpack.client.config')

module.exports = function setupDevServer(app, opts) {
    // modify client config to work with hot middleware
    clientConfig.entry.app = ['webpack-hot-middleware/client', clientConfig.entry.app]
    clientConfig.output.filename = '[name].js'
    clientConfig.plugins.push(
        new webpack.HotModuleReplacementPlugin(),
        new webpack.NoEmitOnErrorsPlugin(),
        new webpack.DefinePlugin({
            'process.env.NODE_ENV': process.env.NODE_ENV || 'development'
        })
        // new BundleAnalyzerPlugin()
    )

    // dev middleware
    const clientCompiler = webpack(clientConfig)
    clientCompiler.apply(new webpack.ProgressPlugin())
    const devMiddleware = require('webpack-dev-middleware')(clientCompiler, {
        publicPath: clientConfig.output.publicPath,
        stats: {
            colors: true,
            chunks: false
        },
        watchOptions: {
            aggregateTimeout: 300,
            poll: true
        },
        index: "index.html",
    })
    app.use(devMiddleware)
        // hot middleware
    app.use(require('webpack-hot-middleware')(clientCompiler))

}
