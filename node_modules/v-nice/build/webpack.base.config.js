const fs = require('fs')
const path = require('path')
const vueConfig = require('./vue-loader.config')
const babelrc = JSON.parse(fs.readFileSync(path.resolve(__dirname, '..', '.babelrc')).toString());

module.exports = {
    devtool: '#source-map',
    entry: {
        app: path.resolve(__dirname, '../src/entry.js'),
        vendor: [
            'vue'
        ]
    },
    output: {
        path: path.resolve(__dirname, '../'),
        publicPath: '/',
        filename: '[name].[chunkhash].js',
        chunkFilename: "[id].[chunkhash].js"
    },
    resolve: {
        alias: {
            'api': path.resolve(__dirname, '../src/api'),
            'public': path.resolve(__dirname, '../public'),
            'vue': path.resolve(__dirname, '..', 'node_modules', 'vue', 'dist', 'vue.common.js')
        }
    },
    module: {
        rules: [{
                test: /\.vue$/,
                loader: 'vue-loader',
                options: vueConfig
            },
            {
                test: /\.jsx?$/,
                loader: 'babel-loader',
                exclude: /node_modules/,
                options: babelrc
            },
            {
                test: /\.css$/,
                loader: 'style-loader!css-loader'
            },
            {
                test: /\.(eot|svg|ttf|woff|woff2)(\?\S*)?$/,
                loader: 'file-loader'
            },
            {
                test: /\.(png|jpe?g|gif|svg)(\?\S*)?$/,
                loader: 'file-loader',
                query: {
                    name: '[name].[ext]?[hash]'
                }
            },
            {
                test: /\.(png|jpg|gif|svg)$/,
                loader: 'url-loader',
                options: {
                    limit: 10000,
                    name: '[name].[ext]?[hash]'
                }
            }, {
                test: /\.less$/,
                loader: 'style-loader!css-loader!autoprefixer-loader?add=true!less-loader',
            }
        ]
    },
    performance: {
        hints: process.env.NODE_ENV === 'production' ? 'warning' : false
    }
}