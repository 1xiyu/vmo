const fs = require('fs')
const path = require('path')
const https = require('https')
const morgan = require('morgan')
const express = require('express')
const favicon = require('serve-favicon')
const compression = require('compression')
const cookieParser = require('cookie-parser')
const proxy = require('http-proxy-middleware');
// const config = require('./config')
const isProd = process.env.NODE_ENV === 'production'
const resolve = (file) => path.resolve(__dirname, file)
const serve = (path, cache) => express.static(resolve(path), {
    maxAge: cache && isProd ? 60 * 60 * 24 * 30 : 0
})

const app = express()

// 开发环境的配置
if (!isProd) {
    require('../build/setup-dev-server')(app);
}

app.use('/api', proxy({
    target: 'http://m.immomo.com/',
    changeOrigin: true
}));

app.use(morgan())
app.use(cookieParser())
app.use(compression({
    threshold: 0
}))

app.use('/manifest.json', serve('./manifest.json'))
app.use('/dist', serve('./dist'))
app.use('/public', serve('./public'))

//  线上环境 auth(app) 
if (isProd) {
    app.get('*', (req, res) => {
        res.setHeader("Content-Type", "text/html")
        // res.setHeader("Server", config.serverInfo)
        fs.readFile('dist/index.html', (err, data) => {
            if (err) {
                throw err;
            }
            res.write(data);
            res.end();
        })
    })
}

const port = process.env.PORT || 9090
const httpsPost = port + 1;

const server = app.listen(port, () => {
    console.log(`server started at localhost:${port}`)
});

